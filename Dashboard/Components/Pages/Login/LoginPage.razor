@page "/login"
@using Microsoft.EntityFrameworkCore
@inject IJSRuntime JSRuntime
@inject NavigationManager Nav
@using Dashboard.Connect
@inject Dashboard.Connect.DashboardDbContext DB
@inject Dashboard.Services.LoginService loginService
@inject NavigationManager Nav
@using Dashboard.Model
@inject ToastService toastService

@if (loginService.IsLoggedIn) //if user is logged in redirects to home page
{
    <div class="text-center">
        <p>You are already logged in. Redirecting to your profile...</p>
        <p>If you are not redirected, <a href="/user/@loginService.Id">click here</a>.</p>
    </div>
}
else 
{ //if not logged in show login form 
    <div class="login-background">
        <div class="login-card card shadow-lg">
            <h1 class="text-center card-header">Login</h1>

            <div class="card-body">
                <EditForm Model="user" OnSubmit="Login" FormName="login">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username:</label>
                        <InputText id="username" @bind-Value="user.Username" class="form-control" />
                        <ValidationMessage For="() => user.Username" class="text-danger" />
                    </div>

                    <div class="mb-3">
                        <label for="password" class="form-label">Password:</label>
                        <InputText id="password" type="password" @bind-Value="user.Password" class="form-control" />
                        <ValidationMessage For="() => user.Password" class="text-danger" />
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">@errorMessage</div>
                    }

                    <button type="submit" class="btn btn-primary w-100">Login</button>
                </EditForm>
            </div>

            <div class="card-footer text-center">
                <p>No account? <a href="/users/create">Create Account here</a></p>
            </div>
        </div>
    </div>
}

@code {
    private User user { get; set; } = new(); // Holds the user data entered in the form
    private string errorMessage; // Holds error messages for login issues

    [Inject] protected ToastService ToastService { get; set; } = default!; // Service to show toast notifications

    List<ToastMessage> messages = new List<ToastMessage>(); // List to manage toast messages

    private void ShowMessage(ToastType toastType) => messages.Add(CreateToastMessage(toastType)); // Adds a new toast message

    private ToastMessage CreateToastMessage(ToastType toastType)
    {
        string message = toastType == ToastType.Success
            ? $"Logged in successfully!" // Success message
            : $"Login failed!"; // Failure message

        return new ToastMessage
        {
            Type = toastType,
            Message = message,
        };
    }

    protected override void OnInitialized()
    {
        if (loginService.IsLoggedIn)
        {
            Nav.NavigateTo($"/"); // Redirects to home if already logged in
        }
    }

    private async Task Login()
    {
        // Checks if the entered username and password match any user in the database
        var authenticatedUser = await DB.Users
            .FirstOrDefaultAsync(u => u.Username == user.Username && u.Password == user.Password);

        if (authenticatedUser != null)
        {
            // If user is authenticated, set login details and redirect
            loginService.Id = authenticatedUser.Id;
            loginService.Username = authenticatedUser.Username;
            loginService.IsLoggedIn = true;
            loginService.ImgURL = authenticatedUser.ProfileImage;
            loginService.IsAdmin = authenticatedUser.Id == 1 && authenticatedUser.Username == "admin";

            ToastService.Notify(new(ToastType.Success, $"Logged in successfully.")); // Show success message

            await Task.Delay(500); // Short delay before redirect
            Nav.NavigateTo($"/", true); // Redirect to home page
        }
        else
        {
            errorMessage = "Invalid username or password. Please try again."; // Show error message if login fails
        }
    }
}
