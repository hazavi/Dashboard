@page "/news"
@inject Dashboard.Services.NewsService NewsService

<!-- Show a loading message while news items are being fetched -->
@if (newsItems == null)
{
    <p>Loading...</p>
}

else if (newsItems.Length == 0) @* if no news items are available *@
{
    <p>No news items available.</p>
}
else @* Display the news items *@
{
<div class="news-container">
    @foreach (var item in newsItems)
    {
        <div class="news-item">
            <h4>@item.Title</h4>
            @* Display the news image if available *@ 
            @if (!string.IsNullOrEmpty(item.ImageUrlToShow))
            {
                <img src="@item.ImageUrlToShow" alt="News Image" class="news-image" />
            }
            else
            {
                <p>No image available.</p>
            }
            <p>@item.Description</p>
            <a href="@item.Link" target="_blank">Read more</a>
        </div>
    }
</div>
}

@code {
    private NewsItem[] newsItems = Array.Empty<NewsItem>(); // Holds the list of news items

    // Called when the component is initialized
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch the top news items from the news service
            var response = await NewsService.GetTopNewsAsync();

            // Check if the response has news items
            if (response?.Results != null && response.Results.Length > 0)
            {
                newsItems = response.Results; // Set the news items to display

                // Debug: Print each image URL to check if they are correct
                foreach (var item in newsItems)
                {
                    Console.WriteLine($"Image URL: {item.ImageUrl}");
                }
            }
            else
            {
                newsItems = Array.Empty<NewsItem>(); // No news items found
            }
        }
        catch (Exception ex)
        {
            // Log error if fetching news fails
            Console.WriteLine($"Error fetching news: {ex.Message}");
            newsItems = Array.Empty<NewsItem>(); // Set to empty in case of error
        }
    }
}
