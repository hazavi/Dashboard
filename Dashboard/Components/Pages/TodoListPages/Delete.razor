@page "/todolists/delete"

@using Microsoft.EntityFrameworkCore
@using Dashboard.Model
@inject Dashboard.Connect.DashboardDbContext DB
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>TodoList</h4>
    <hr />
    @if (todolist is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@todolist.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@todolist.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@todolist.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@todolist.DateCreated</dd>
        </dl>

        <EditForm method="post" Model="todolist" OnValidSubmit="DeleteTodoList" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(todolist is null)">Delete</button> |
            <a href="/todo">Back to List</a>
        </EditForm>
    }
</div>

@code {
    TodoList? todolist;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        todolist = await DB.TodoLists.FirstOrDefaultAsync(m => m.Id == Id);

        if (todolist is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteTodoList()
    {
        DB.TodoLists.Remove(todolist!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/todolists");
    }
}
